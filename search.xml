<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringSecurity</title>
      <link href="/2022/03/06/springsecurity/"/>
      <url>/2022/03/06/springsecurity/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringSecurity实战"><a href="#SpringSecurity实战" class="headerlink" title="SpringSecurity实战"></a>SpringSecurity实战</h2><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><p>基本上涉及到用户参与的系统都要进行权限管理，权限管理属于系统安全的范畴,权限管理实现<strong>对用户访问系统的控制</strong>按照<strong>安全规则</strong>或者<strong>安全策略</strong>控制用户<strong>可以访问而且只能访问自己</strong><br>权限管理包括身份认证和授权两部分，简称认证授权。对于需要访问控制的资源用户 首先经过身份认证，认证通过后用户具有该资源的权限方可访问</p><h3 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h3><p><strong>身份认证，</strong>就是判断一个用户是否为合法用户的处理过程，最常用的简单身份认证是系统通过核对用户输入的用户名和口令，看其是否与系统中存储的该用户的用户名和口令一致，来判断用户身份是否正确，对于采用<strong>指纹</strong>等系统，则出示指纹；对于硬件Key等刷卡系统，则需要刷卡</p><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><p><strong>授权，</strong> 既访问控制，控制谁能访问哪些资源。主体进行身份认证后需要分配权限方可访问系统的资源，对于某些资源没有权限是无法访问的</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>和其他领域不同，在JAVA企业级开发中，安全管理框架非常少，目前比较常见的就是：</p><ul><li>Shrio<ul><li>Shiro本身是一个老牌的安全管理框架，有着众多的有点，例如轻量、简单、易于集成、可以在JavaSE环境中使用等。不过，在微服务时代，Shrio就显得力不从心了，在微服务面前和扩展方面，无法充分发展自己的优势</li></ul></li><li>开发者自定义<ul><li>也有很多公司选择自定义权限，既自己开发权限管理。但是一个系统的交全，不仅仅是登录和权限控制这么简单，我们还要考虑各种各样可能存在的网络攻击以及防御策略，从这个角度来说，开发者自己实现安全管理也并非是一件容易的事情，只有大公司才有足够的人力物力去支持这件事情</li></ul></li><li>SpringSecurity<ul><li>Spring Security作为Spring家族的一员，在和Spring家族的其他成员如Spring Boot Spring Cloud进行整合时，具有其他框架无可比拟的优势，同时对OAuth2有着良好的支持 再加上Spring Cloud对Spring Security的断加持(如 推出Spring Cloud Security),让Spring Security不知不觉中成为微服务目前的首选安全管理框架</li></ul></li></ul><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>官方定义</strong></p><ul><li>官网地址 <a href="https://spring.io/projects/spring-security">https://spring.io/projects/spring-security</a><br>Spring Security is a powerful and highly customizabl authentication and access control framework it is the de-facto standard for securing Spring-based applications.<br>Spring Security is a framework that focuses on providing both authentication and authorization to Java applications. Like all Spring projects, the real power of Spring Security is found in how easily it can be extended to meet custom requirements<br>Spring Security是一个功能强大、 可高度定制的身份验证和访问控制框架。它是保护基于Spring的应用程序的事实标准。<br>Spring Security是一个面向Java应用程序提供身份验证和安全性的框架。与所有Spring项目一样，Spring Security的真正威力在于它可以轻松地扩展以满足定制需求。</li><li>总结<blockquote><p>Spring Security是一个功能强大、 可高度定制的身份验证和访问控制的框架。或者说用来实现系统中权限管理的框架。</p></blockquote><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3>在<spring security="">的架构设计中， 认证<authentication>和授权<authorizat ion="">是分开的，无论使用什么样的认证方式。都不会影响授权，这是两个独立的存在，这种独立带来的好处之一，就是可以非常方便地整合一些外部的解决方案。<br><a href="https://imgtu.com/i/bBm4Z4"><img src="https://s1.ax1x.com/2022/03/06/bBm4Z4.png" alt="bBm4Z4.png"></a><h4 id="认证-1"><a href="#认证-1" class="headerlink" title="认证"></a>认证</h4></authorizat></authentication></spring></li></ul><p><strong>AuthenticationManager</strong><br>在Spring Security中认证是由AuthenticationManager接口来负责的,接口定义为<br><a href="https://imgtu.com/i/bBmLQK"><img src="https://s1.ax1x.com/2022/03/06/bBmLQK.png" alt="bBmLQK.png"></a></p><ul><li>返回Authentication 表示认证成功</li><li>返回AuthenticationException异常，表示认证失败<br>AuthenticationManager主要实现类为ProvilerManager, 在ProviderManager中管理了众多AuthenticationProvider实例。在一次完整的认证流程中， Spring Security允许存在多个<br>AuthenticationProvider，用来实现多种认证方式，这些AuthenticationProvider都是由ProviderManager进行统一管理的<br><a href="https://imgtu.com/i/bBnZwQ"><img src="https://s1.ax1x.com/2022/03/06/bBnZwQ.png" alt="bBnZwQ.png"></a></li><li><em>Authentication</em>*<br>认证以及认证成功的信息主要是由Authentication的实现类进行保存的,其接口定义为:<br><a href="https://imgtu.com/i/bBnKWq"><img src="https://s1.ax1x.com/2022/03/06/bBnKWq.png" alt="bBnKWq.png"></a><br>public interface Authentication extends Principal, Serializable {<br>   Collection&lt;? extends GrantedAuthority&gt; getAuthorities();<br>   Object getCredentials();<br>   Object getDetails();<br>   Object getPrincipal();<br>   boolean isAuthenticated();<br>   void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException;<br>}</li><li>getAuthorities 获取用户权限信息</li><li>getCredentials 获取用户凭证信息，一般指密码</li><li>getDetails 获取用户详细信息</li><li>getPrincipal 获取用户身份信息，用户名、用户对象等</li><li>isAuthenticated 用户是否认证成功</li></ul><h3 id="SecurityContextHolder"><a href="#SecurityContextHolder" class="headerlink" title="SecurityContextHolder"></a>SecurityContextHolder</h3><p>SecurityContextHolder 用来获取登录之后用户信息。Spring Security 会将登录用户数据保存在 Session 中。但是，为了使用方便,Spring Security在此基础上还做了一些改进，其中最主要的一个变化就是线程绑定。当用户登录成功后,Spring Security 会将登录成功的用户信息保存到 SecurityContextHolder 中。SecurityContextHolder 中的数据保存默认是通过ThreadLocal 来实现的，使用 ThreadLocal 创建的变量只能被当前线程访问，不能被其他线程访问和修改，也就是用户数据和请求线程绑定在一起。当登录请求处理完毕后，Spring Security 会将 SecurityContextHolder 中的数据拿出来保存到 Session 中，同时将 SecurityContexHolder 中的数据清空。以后每当有请求到来时，Spring Security 就会先从 Session 中取出用户登录数据，保存到 SecurityContextHolder 中，方便在该请求的后续处理过程中使用，同时在请求结束时将 SecurityContextHolder 中的数据拿出来保存到 Session 中，然后将 Security SecurityContextHolder 中的数据清空。这一策略非常方便用户在 Controller、Service 层以及任何代码中获取当前登录用户数据。</p><h3 id="授权-1"><a href="#授权-1" class="headerlink" title="授权"></a>授权</h3><p>当完成认证后，接下米就是授权了。在 Spring Security 的授权体系中，有两个关键接口，<br><strong>AccessDecisionManager</strong></p><blockquote><p>AccessDecisionManager (访问决策管理器)，用来决定此次访问是否被允许</p></blockquote><p><a href="https://imgtu.com/i/bBn0l6"><img src="https://s1.ax1x.com/2022/03/06/bBn0l6.png" alt="bBn0l6.png"></a><br><strong>AccessDecisionVoter</strong></p><blockquote><p>AccessDecisionVoter (访问决定投票器)，投票器会检查用户是否具备应有的角色，进而投出赞成、反对或者弃权票。</p></blockquote><p><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306025901.png"></p><blockquote><p>AccesDecisionVoter 和 AccessDecisionManager 都有众多的实现类，在 AccessDecisionManager 中会换个遍历 AccessDecisionVoter，进而决定是否允许用户访问，因而 AaccesDecisionVoter 和 AccessDecisionManager 两者的关系类似于 AuthenticationProvider 和 ProviderManager 的关系。</p></blockquote><p><strong>ConfigAttribute</strong></p><blockquote><p>ConfigAttribute，用来保存授权时的角色信息</p></blockquote><p><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306025957.png"></p><blockquote><p>在 Spring Security 中，用户请求一个资源(通常是一个接口或者一个 Java 方法)需要的角色会被封装成一个 ConfigAttribute 对象，在 ConfigAttribute 中只有一个 getAttribute方法，该方法返回一个 String 字符串，就是角色的名称。一般来说，角色名称都带有一个 ROLE_ 前缀，投票器 AccessDecisionVoter 所做的事情，其实就是比较用户所具各的角色和请求某个 资源所需的 ConfigAtuibute 之间的关系。</p></blockquote><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ul><li>Spring Boot</li><li>Spring Security<ul><li>认证：判断用户是否是系统合法用户过程</li><li>授权：判断系统内用户可以访问或具有访问那些资源权限过程</li></ul></li><li><em>创建项目</em>*<blockquote><p>1创建SpringBoot项目</p></blockquote></li></ul><p><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306031324.png"></p><blockquote><p>2创建 controller</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class HelloController {</span><br><span class="line">    @GetMapping("hello")</span><br><span class="line">    public String  hello(){</span><br><span class="line">        System.out.println("hello Security");</span><br><span class="line">        return "hello Security";</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>启动项目进行调试</p><h3 id="整合Spring-Security"><a href="#整合Spring-Security" class="headerlink" title="整合Spring Security"></a>整合Spring Security</h3><p>1 引入Spring Security相关依赖</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.6.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></tbody></table></figure><p>2 在次启动项目</p><ul><li>1.启动完成后控制台生成一个密码</li><li>2.访问hello发现直接跳转到登录页面</li></ul><p><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306032740.png"><br>3 登录系统<br>默认用户名为：user<br>默认密码为: 控制台打印的uuid<br><strong>这就是Spring Security的强大之处，只需要引入一个依赖，所有的接口就会自动保护起来!</strong></p><ul><li>为什么引入Spring Security之后 <strong>没有任何配置所有请求都要认证呐</strong></li><li>在项目中明明没有登录界面，登录界面怎么来的呢?</li><li>为什么使用user和控制台密码能登陆，登录时验证数据源存在哪里呢?</li></ul><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p><a href="https://docs.spring.io/spring-security/site/docs/5.5.4/reference/html5/#servlet-architecture">https://docs.spring.io/spring-security/site/docs/5.5.4/reference/html5/#servlet-architecture</a><br>虽然开发者只需要引入-个依赖，就可以让Spring Security对应用进行保护。SpringSecurity又是如何做到的呢?<br>在Spring Security中认证、授权等功能都是基于过滤器完成的。<br><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306034230.png"><br><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306034254.png"><br>需要注意的是，默认过滤器并不是直接放在Web项目的原生过滤器链中，而是通过一个FlterChainProxy来统干管理。Spring Security中的过滤器链通过FilterChainProxy 嵌入到<br>Web项目的原生过滤器链中。FilterChainProxy 作为一一个顶层的管理者，将统一管理 Security Fiter FilterChainProxy 本身是通过Spring 框架提供DelegatingFilterProxy整合到原生的过滤器链中</p><h3 id="Security-Filters"><a href="#Security-Filters" class="headerlink" title="Security Filters"></a>Security Filters</h3><p>那么在Spring Security中给我们提供那些过滤器?默认情况下那些过滤器会被加载呢?<br>|  过滤器 |  过滤器作用 |  默认是否加载 |<br>|  ChannelProcessingFilter  | 过滤请求协议 HTTP 、HTTPS |   No    |<br>|  WebAsyncManagerIntegrationFilter |  将 WebAsyncManger 与 SpringSecurity 上下文进行集成     |  YES |<br>|  SecurityContextPersistenceFilter |  在处理请求之前,将安全信息加载到 SecurityContextHolder 中         |  YES |<br>|  HeaderWriterFilter |  处理头信息加入响应中     |  YES |<br>|  CorsFilter |  处理跨域问题     |  NO |<br>|  CsrfFilter |  处理 CSRF 攻击     |  YES |<br>|  LogoutFilter |  处理注销登录     |  YES |<br>|  OAuth2AuthorizationRequestRedirectFilter |  处理 OAuth2 认证重定向 |  NO |<br>|  Saml2WebSsoAuthenticationRequestFilter |  处理 SAML 认证     |  NO |<br>|  X509AuthenticationFilter |  处理 X509 认证     |  NO |<br>|  AbstractPreAuthenticatedProcessingFilter |  处理预认证问题 |  NO  |<br>|  CasAuthenticationFilter |  处理 CAS 单点登录     |  NO |<br>|  OAuth2LoginAuthenticationFilter |  处理 OAuth2 认证     |  NO |<br>|  Saml2WebSsoAuthenticationFilter |  处理 SAML 认证     |  NO |<br>|  UsernamePasswordAuthenticationFilter |  处理表单登录     |  YES |<br>|  OpenIDAuthenticationFilter |  处理 OpenID 认证     |  NO |<br>|  DefaultLoginPageGeneratingFilter |  配置默认登录页面     |  YES |<br>|  DefaultLogoutPageGeneratingFilter |  配置默认注销页面     |  YES |<br>|  ConcurrentSessionFilter |  处理 Session 有效期     |  NO |<br>|  DigestAuthenticationFilter |  处理 HTTP 摘要认证     |  NO |<br>|  BearerTokenAuthenticationFilter |  处理 OAuth2 认证的 Access Token     |  NO |<br>|  BasicAuthenticationFilter |  处理 HttpBasic 登录     |  YES |<br>|  RequestCacheAwareFilter | 处理请求缓存     |  YES |<br>|  SecurityContextHolder /AwareRequestFilter |  包装原始请求     |  YES |<br>|  JaasApiIntegrationFilter | 处理 JAAS 认证     |  NO |<br>| RememberMeAuthenticationFilter |  处理 RememberMe 登录     |  NO |<br>|  AnonymousAuthenticationFilter |  配置匿名认证     |  YES |<br>| OAuth2AuthorizationCodeGrantFilter |  处理OAuth2认证中授权码     |  NO |<br>|  SessionManagementFilter |  处理 session 并发问题     |  YES |<br>|  ExceptionTranslationFilter |  处理认证/授权中的     |  YES |<br>| FilterSecurityInterceptor |  处理授权相关 |  YES |<br>|  SwitchUserFilter | 处理账户切换     |  NO |<br>可以看出，Spring Security 提供了 30 多个过滤器。默认情况下Spring Boot 在对 Spring Security 进入自动化配置时，会创建一个名为 SpringSecurityFilerChain 的过滤器，并注入到 Spring 容器中，这个过滤器将负责所有的安全管理，包括用户认证、授权、重定向到登录页面等。具体可以参考WebSecurityConfiguration的源码:<br><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306041109.png"><br><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306041616.png"><br><strong>SpringBootWebSecurityConfiguration</strong><br>这个类是spring boot自动配置类，通过这个源码得知，默认情况下对所有请求进行权限控制:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@Configuration(proxyBeanMethods = false)</span><br><span class="line">@ConditionalOnDefaultWebSecurity</span><br><span class="line">@ConditionalOnWebApplication(type = Type.SERVLET)</span><br><span class="line">class SpringBootWebSecurityConfiguration {</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">@Order(SecurityProperties.BASIC_AUTH_ORDER)</span><br><span class="line">SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {</span><br><span class="line">http.authorizeRequests().anyRequest().authenticated().and().formLogin().and().httpBasic();</span><br><span class="line">return http.build();</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>这就是为什么在引入Spring Security中没有任何配置情况下，请求会被拦截的原因! “</strong><br>通过上面对自动配置分析，我们也能看出默认生效条件为:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class DefaultWebSecurityCondition extends AllNestedConditions {</span><br><span class="line">    DefaultWebSecurityCondition() {</span><br><span class="line">        super(ConfigurationPhase.REGISTER_BEAN);</span><br><span class="line">    }</span><br><span class="line">    @ConditionalOnClass({ SecurityFilterChain.class, HttpSecurity.class })</span><br><span class="line">    static class Classes {</span><br><span class="line">    }</span><br><span class="line">    @ConditionalOnMissingBean({ WebSecurityConfigurerAdapter.class, SecurityFilterChain.class })</span><br><span class="line">    static class Beans {</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>条件一 classpath中存在 SecurityFilterChain.class, HttpSecurity.class</li><li>条件二 没有自定义 WebSecurityConfigurerAdapter.class, SecurityFilterChain.class<br>默认情况下，条件都是满足的。WebSecurityConfigurerAdapter 这个类极其重要，Spring核心配置都在这个类中:<br><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306043210.png"><h3 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h3><img src="https://beishengyi.oss-cn-beijing.aliyuncs.com/2022/03/06/QQ%E6%88%AA%E5%9B%BE20220306043913.png"></li></ul><p>1.请求 /hello接口，在引入spring security之后会先经过一些列过滤器<br>2.在请求到达FilterSecurityInterceptor时，发现请求并未认证。请求拦截下来，并抛出AccessDeniedException异常。<br>3.抛出 AccessDeniedException的异常会被ExceptionTranslationFilter捕获，这个Filter中会调用LoginUrlAuthenticationEntryPointtconpmence方法给客户端返回302，要求客户端进行重定向到/login页面<br>4.客户端发送 /login请求。<br>5 login 请求会再次被拦截器中DefautLoginPageGeneratingFilter拦截到，并在拦截器中返回生成登录页面。</p><p><strong>就是通过这种方式，Spring Security默认讨滤器中生成了登录页面，井返回!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring5框架</title>
      <link href="/2022/02/12/spring/"/>
      <url>/2022/02/12/spring/</url>
      
        <content type="html"><![CDATA[<h2 id="1、Spring框架概述"><a href="#1、Spring框架概述" class="headerlink" title="1、Spring框架概述"></a>1、Spring框架概述</h2><p><strong>1、Spring是轻量级的开源的 JavaEE框架</strong></p><p><strong>2、Spring可以解决企业应用开发的复杂性</strong></p><p><strong>3、Spring有两个核心部分：IOC 和 AOP</strong><br>(1) IOC: 控制反转,把创建对象工程交给Spring进行管理</p><p>(2) Aop: 面向切面,不修改源代码进行功能增强</p><p><strong>4、Spring特点</strong><br>(1) 方便解耦,简化开发</p><p>(2) Aop编程支持</p><p>(3) 方便程序测试</p><p>(4) 方便和其他框架进行整合</p><p>(5) 方便进行事务操作</p><p>(5) 降低API开发难度</p><p><strong>5、现在课程中,选取Spring版本5.x</strong><br><strong>### 入门案列</strong><br><strong>1、下载Spring5</strong><br>(1) 使用Spring最新版本5.3.15<br><a href="https://imgtu.com/i/HwcHtU"><img src="https://s4.ax1x.com/2022/02/12/HwcHtU.png" alt="HwcHtU.png"></a><br>(2)下载地址<br><a href="https://repo.spring.io/ui/native/release/org/springframework/spring">https://repo.spring.io/ui/native/release/org/springframework/spring</a><br><strong>2、打开idea工具 创建Java普通工程</strong><br><strong>3、导入Spring相关jar包</strong><br><a href="https://imgtu.com/i/HwRMlQ"><img src="https://s4.ax1x.com/2022/02/12/HwRMlQ.png" alt="HwRMlQ.png"></a><br><strong>4、创建普通类,在这个类创建普通方法</strong><br>   public void add(){<br>        System.out.println(“addd…..”);<br>    }<br><strong>5、创建Spring配置文件，在配置文件配置创建的对象</strong></p><pre><code>    &lt;!--配置User对象创建--&gt;    &lt;bean id="user" class="com.atwc.spring5.User"&gt;&lt;/bean&gt;</code></pre><p>(1) Spring配置文件使用xml格式<br><strong>6、进行测试代码编写</strong><br> @Test<br>    public void test(){<br>        //加载配置文件bean.xml<br>        ApplicationContext context=new ClassPathXmlApplicationContext(“bean.xml”);<br>        //获取配置文件创建的对象<br>        User user = context.getBean(“user”, User.class);<br>        System.out.println(user);<br>        user.add();<br>    }</p><h2 id="2、IOC容器"><a href="#2、IOC容器" class="headerlink" title="2、IOC容器"></a>2、IOC容器</h2><p><strong>IOC(概念和原理)</strong><br><strong>1、什么是IOC</strong><br>(1) 控制反转, 把对象创建和对象之间的调用过程,交给Spring进行管理<br>(2) 使用IOC目的: 为了耦合度降低<br>(3) 做入门案列就是IOC实现</p><p><strong>2、IOC底层原理</strong><br>(1) xml解析、工厂模式、反射</p><p><strong>3、画图讲解IOC</strong><br><a href="https://imgtu.com/i/Hw4k38"><img src="https://s4.ax1x.com/2022/02/12/Hw4k38.png" alt="Hw4k38.png"></a></p><h3 id="IOC-接口"><a href="#IOC-接口" class="headerlink" title="IOC(接口)"></a>IOC(接口)</h3><p><strong>1、IOC思想基于IOC容器完成，IOC容器底层就是对象工厂</strong><br><strong>2、Spring提供IOC容器实现两种方式：（两个接口）</strong><br>(1)BeanFactory: IOC容器基本实现,是Spring内部的使用接口，不提供开发人员进行使用<br>加载配置文件时候不会创建对象，在获取对象或者使用对象的时候才会创建对象<br>(2)ApplicationContext: BeanFactory接口的子接口，提供更多强大的功能，一般由开发人员进行使用<br>加载配置文件时候就会把在配置文件对象进行创建<br><strong>3、ApplicationContext接口实现类</strong><br><a href="https://imgtu.com/i/Hw4x2T"><img src="https://s4.ax1x.com/2022/02/12/Hw4x2T.png" alt="Hw4x2T.png"></a><br><strong>1、什么是Bean管理</strong><br>(0) Bean管理指的是两个操作<br>(1) Spring创建对象<br>(2) Spring注入属性<br><strong>2、Bean管理操作由两种方式</strong><br>(1) 基于xml配置文件方式实现<br>(2) 基于注解方式实现</p><h3 id="IOC操作Bean管理-基于XMl方式"><a href="#IOC操作Bean管理-基于XMl方式" class="headerlink" title="IOC操作Bean管理(基于XMl方式)"></a>IOC操作Bean管理(基于XMl方式)</h3><p><strong>1、基于xml方式创建对象</strong><br>(1) 在Spring配置文件中，使用bean标签 标签里面添加对应属性，就可以实现对象创建<br>(2) 在bean标签有很多属性，介绍常用的属性<br>id属性:唯一标识<br>class属性: 类全路径(包类路径)<br>name属性: 可以加特殊符号<br>(3) 创建对象时候，默认也是执行无参数构造<br><strong>2、基于xml方式注入属性</strong><br>(1) DI:依赖注入，就是注入属性<br>3、第一种注入方式：使用set方法进行注入<br>(1) 创建类，定义属性和对应的set方法<br>public class Book {<br>    private String bname;<br>    private String bauthor;<br>    public void setBname(String bname) {<br>        this.bname = bname;<br>    }<br>    public void setBauthor(String bauthor) {<br>        this.bauthor = bauthor;<br>    }</p><pre><code>@Overridepublic String toString() {    return "Book{" +            "bname='" + bname + '\'' +            ", bauthor='" + bauthor + '\'' +            '}';}</code></pre><p>}<br>(2) 在Spring配置文件配置对象创建，配置属性注入<br>   <!--2 set方法注入属性--><br>    bean id=”book” class=”com.atwc.spring5.Book”<br>        <!--使用property完成属性注入        name: 类里面属性名称        value:向属性注入的值        --><br>        property name=”bname” value=”卧槽”property<br>        property name=”bauthor” value=”我操”property<br>    bean<br>4、第二种注入方式: 使用有参数构造进行注入<br>(1) 创建类，定义属性 创建有参构造方法<br>public class Orders {<br>    private String oname;<br>    private String ovalue;<br>    public Orders(String oname,String ovalue){<br>        this.oname=oname;<br>        this.ovalue=ovalue;<br>    }<br>    @Override<br>    public String toString() {<br>        return “Orders{“ +<br>                “oname=’” + oname + ‘'‘ +<br>                “, ovalue=’” + ovalue + ‘'‘ +<br>                ‘}’;<br>    }<br>}<br>(2) 在Spring配置文件中 进行配置<br>  bean id=”order” class=”com.atwc.spring5.Orders”&gt;<br>       constructor-arg name=”oname” value=”1”&gt;constructor-arg<br>       constructor-arg name=”ovalue” value=”2”&gt;constructor-arg<br>  bean<br>5、p名称空间注入<br>(1) 使用p名称空间注入，可以简化基于xml配置方式<br>第一步 添加p名称空间在配置文件中<br>第二部 进行属性注入，在bean标签里面进行操作</p><h3 id="IOC操作Bean管理-xml注入其他类型属性"><a href="#IOC操作Bean管理-xml注入其他类型属性" class="headerlink" title="IOC操作Bean管理(xml注入其他类型属性)"></a>IOC操作Bean管理(xml注入其他类型属性)</h3><p>1、字面量<br>(1) null值<br>用null标签<br>(2) 属性值包含特殊符号<br>![CDATA[&lt;&lt;值&gt;&gt;]]<br>2、注入属性-外部bean<br>(1) 创建两个类 service类和dao类<br>(2) 在service调用dao里面的方法<br>(3) 在spring配置文件中进行配置<br>3、注入属性-内部bean和级联赋值<br>(1) 一对多关系：部门和员工<br>一个部门有多个员工，一个员工属于一个部门<br>部门是一，员工是多<br>(2) 在实体类之间表示一对多关系<br>4、注入属性-级联赋值</p><h3 id="IOC操作Bean管理（xml注入集合属性）"><a href="#IOC操作Bean管理（xml注入集合属性）" class="headerlink" title="IOC操作Bean管理（xml注入集合属性）"></a>IOC操作Bean管理（xml注入集合属性）</h3><p>1、注入数组类型属性</p><p>2、注入List集合类型属性</p><p>3、注入Map集合类型属性<br>(1) 创建类，定义数组，list,map,set类型属性 生成对应set方法<br>(2) 在spring配置文件进行配置<br>4、在集合里面设置对象类型值<br>property name=”list”<br>               list<br>                   ref bean=”course1”&gt;ref<br>                   ref bean=”course2”&gt;ref<br>               list<br>            property<br>5、把集合注入部分提取出来</p><h3 id="IOC操作Bean管理-FactoryBean"><a href="#IOC操作Bean管理-FactoryBean" class="headerlink" title="IOC操作Bean管理(FactoryBean)"></a>IOC操作Bean管理(FactoryBean)</h3><p>1、Spring有两种类型bean,一种普通bean,另外一种工厂bean(FactoryBean)</p><p>2、普通Bean: 在配置文件中定义bean类型就是返回类型</p><p>3、工厂bean: 在配置文件定义bean类型可以和返回类型不一样<br>第一步 创建类，让这个类作为工厂bean,实现接口FactoryBean<br>第二步 实现接口里面的方法，在实现的方法中定义返回的bean类型</p><h3 id="IOC操作Bean管理-Bean作用域"><a href="#IOC操作Bean管理-Bean作用域" class="headerlink" title="IOC操作Bean管理(Bean作用域)"></a>IOC操作Bean管理(Bean作用域)</h3><p>1、在Spring里面，设置创建bean实列是单实例还是多实列<br>2、在Spring里面，默认情况下，bean是单实例对象<br>设置单多实列scope: singleton 单实例 prototype 多实列  </p><h3 id="IOC操作Bean管理-Bean生命周期"><a href="#IOC操作Bean管理-Bean生命周期" class="headerlink" title="IOC操作Bean管理(Bean生命周期)"></a>IOC操作Bean管理(Bean生命周期)</h3>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql基础搭建</title>
      <link href="/2021/11/21/mysql-ji-chu-da-jian/"/>
      <url>/2021/11/21/mysql-ji-chu-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL环境搭建"><a href="#MySQL环境搭建" class="headerlink" title="MySQL环境搭建"></a>MySQL环境搭建</h1><hr><h2 id="1-MySQL的卸载"><a href="#1-MySQL的卸载" class="headerlink" title="1. MySQL的卸载"></a>1. MySQL的卸载</h2><h3 id="步骤1：停止MySQL服务"><a href="#步骤1：停止MySQL服务" class="headerlink" title="步骤1：停止MySQL服务"></a>步骤1：停止MySQL服务</h3><p>在卸载之前，先停止MySQL8.0的服务。按键盘上的“Ctrl + Alt + Delete”组合键，打开“任务管理器”对话框，可以在“服务”列表找到“MySQL8.0”的服务，如果现在“正在运行”状态，可以右键单击服务，选择“停止”选项停止MySQL8.0的服务，如图所示。</p><p><img src="https://z3.ax1x.com/2021/11/21/IXF3rT.png"></p><h3 id="步骤2：软件的卸载"><a href="#步骤2：软件的卸载" class="headerlink" title="步骤2：软件的卸载"></a>步骤2：软件的卸载</h3><p><strong>方式1：通过控制面板方式</strong></p><p>卸载MySQL8.0的程序可以和其他桌面应用程序一样直接在“控制面板”选择“卸载程序”，并在程序列表中找到MySQL8.0服务器程序，直接双击卸载即可，如图所示。这种方式删除，数据目录下的数据不会跟着删除。</p><p><img src="https://z3.ax1x.com/2021/11/21/IXF8qU.png"></p><p><strong>方式2：通过360或电脑管家等软件卸载</strong></p><p>略</p><p><strong>方式3：通过安装包提供的卸载功能卸载</strong></p><p>你也可以通过安装向导程序进行MySQL8.0服务器程序的卸载。</p><p>① 再次双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。安装向导会自动检测已安装的MySQL服务器程序。</p><p>② 选择要卸载的MySQL服务器程序，单击“Remove”（移除），即可进行卸载。</p><p><img src="https://z3.ax1x.com/2021/11/21/IXFYa4.png"></p><p>③ 单击“Next”（下一步）按钮，确认卸载。</p><p><img src="https://z3.ax1x.com/2021/11/21/IXFtIJ.png"></p><p>④ 弹出是否同时移除数据目录选择窗口。如果想要同时删除MySQL服务器中的数据，则勾选“Remove the data directory”，如图所示。</p><img src="https://z3.ax1x.com/2021/11/21/IXFUi9.png" alt="" style="zoom:80%;"><p>⑤ 执行卸载。单击“Execute”（执行）按钮进行卸载。</p><img src="https://z3.ax1x.com/2021/11/21/IXFdR1.png" alt="" style="zoom:90%;"><p>⑥ 完成卸载。单击“Finish”（完成）按钮即可。如果想要同时卸载MySQL8.0的安装向导程序，勾选“Yes，Uninstall MySQL Installer”即可，如图所示。</p><img src="https://z3.ax1x.com/2021/11/21/IXFwxx.png" alt="" style="zoom:80%;"><h3 id="步骤3：残余文件的清理"><a href="#步骤3：残余文件的清理" class="headerlink" title="步骤3：残余文件的清理"></a>步骤3：残余文件的清理</h3><p>如果再次安装不成功，可以卸载后对残余文件进行清理后再安装。</p><p>（1）服务目录：mysql服务的安装目录</p><p>（2）数据目录：默认在C:\ProgramData\MySQL</p><p>如果自己单独指定过数据目录，就找到自己的数据目录进行删除即可。</p><blockquote><p>注意：请在卸载前做好数据备份</p><p>在操作完以后，需要重启计算机，然后进行安装即可。<strong>如果仍然安装失败，需要继续操作如下步骤4。</strong></p></blockquote><h3 id="步骤4：清理注册表（选做）"><a href="#步骤4：清理注册表（选做）" class="headerlink" title="步骤4：清理注册表（选做）"></a>步骤4：清理注册表（选做）</h3><p>如果前几步做了，再次安装还是失败，那么可以清理注册表。</p><p>如何打开注册表编辑器：在系统的搜索框中输入<code>regedit</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL服务 目录删除</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL服务 目录删除</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL服务 目录删除</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\MySQL服务 目录删除</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL服务目录删除</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL服务删除</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注册表中的ControlSet001,ControlSet002,不一定是001和002,可能是ControlSet005、006之类</p></blockquote><h3 id="步骤5：删除环境变量配置"><a href="#步骤5：删除环境变量配置" class="headerlink" title="步骤5：删除环境变量配置"></a>步骤5：删除环境变量配置</h3><p>找到path环境变量，将其中关于mysql的环境变量删除，<strong>切记不要全部删除。</strong></p><p>例如：删除  D:\develop_tools\mysql\MySQLServer8.0.26\bin;  这个部分</p><p><img src="https://z3.ax1x.com/2021/11/21/IXFcIH.png"></p><h2 id="2-MySQL的下载、安装、配置"><a href="#2-MySQL的下载、安装、配置" class="headerlink" title="2. MySQL的下载、安装、配置"></a>2. MySQL的下载、安装、配置</h2><h3 id="2-1-MySQL的4大版本"><a href="#2-1-MySQL的4大版本" class="headerlink" title="2.1 MySQL的4大版本"></a>2.1 MySQL的4大版本</h3><blockquote><ul><li><p><strong>MySQL Community Server 社区版本</strong>，开源免费，自由下载，但不提供官方技术支持，适用于大多数普通用户。</p></li><li><p><strong>MySQL Enterprise Edition 企业版本</strong>，需付费，不能在线下载，可以试用30天。提供了更多的功能和更完备的技术支持，更适合于对数据库的功能和可靠性要求较高的企业客户。</p></li><li><p><strong>MySQL Cluster 集群版</strong>，开源免费。用于架设集群服务器，可将几个MySQL Server封装成一个Server。需要在社区版或企业版的基础上使用。</p></li><li><p><strong>MySQL Cluster CGE 高级集群版</strong>，需付费。</p></li></ul></blockquote><ul><li>目前最新版本为<code>8.0.27</code>，发布时间<code>2021年10月</code>。此前，8.0.0 在 2016.9.12日就发布了。</li></ul><ul><li>本课程中使用<code>8.0.26版本</code>。</li></ul><p>此外，官方还提供了<code>MySQL Workbench</code>（GUITOOL）一款专为MySQL设计的<code>图形界面管理工具</code>。MySQLWorkbench又分为两个版本，分别是<code>社区版</code>（MySQL Workbench OSS）、<code>商用版</code>（MySQL WorkbenchSE）。</p><h3 id="2-2-软件的下载"><a href="#2-2-软件的下载" class="headerlink" title="2.2 软件的下载"></a>2.2 软件的下载</h3><p><strong>1. 下载地址</strong></p><p>官网：<a href="https://www.mysql.com/">https://www.mysql.com</a></p><p><strong>2. 打开官网，点击DOWNLOADS</strong></p><p>然后，点击<code>MySQL Community(GPL) Downloads</code></p><p><img src="https://z3.ax1x.com/2021/11/21/IXF2id.png"></p><p><strong>3. 点击 MySQL Community Server</strong></p> <img src="https://z3.ax1x.com/2021/11/21/IXFRJA.png" alt="" style="zoom:80%;"><p><strong>4. 在General Availability(GA) Releases中选择适合的版本</strong></p><p>Windows平台下提供两种安装文件：MySQL二进制分发版（.msi安装文件）和免安装版（.zip压缩文件）。一般来讲，应当使用二进制分发版，因为该版本提供了图形化的安装向导过程，比其他的分发版使用起来要简单，不再需要其他工具启动就可以运行MySQL。</p><ul><li>这里在Windows 系统下推荐下载<code>MSI安装程序</code>；点击<code>Go to Download Page</code>进行下载即可</li></ul> <img src="https://z3.ax1x.com/2021/11/21/IXFWRI.png" alt="" style="zoom:67%;"><p> <img src="https://z3.ax1x.com/2021/11/21/IXF4QP.png"></p><ul><li>Windows下的MySQL8.0安装有两种安装程序<ul><li><code>mysql-installer-web-community-8.0.26.0.msi</code> 下载程序大小：2.4M；安装时需要联网安装组件。</li><li><code>mysql-installer-community-8.0.26.0.msi</code> 下载程序大小：450.7M；安装时离线安装即可。<strong>推荐。</strong></li></ul></li><li>如果安装MySQL5.7版本的话，选择<code>Archives</code>，接着选择MySQL5.7的相应版本即可。这里下载最近期的MySQL5.7.34版本。</li></ul><p> <img src="https://z3.ax1x.com/2021/11/21/IXFIL8.png"></p><p><img src="https://z3.ax1x.com/2021/11/21/IXFTeS.png"></p><h3 id="2-3-MySQL8-0-版本的安装"><a href="#2-3-MySQL8-0-版本的安装" class="headerlink" title="2.3 MySQL8.0 版本的安装"></a>2.3 MySQL8.0 版本的安装</h3><p>MySQL下载完成后，找到下载文件，双击进行安装，具体操作步骤如下。</p><p>步骤1：双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。</p><p>步骤2：打开“Choosing a Setup Type”（选择安装类型）窗口，在其中列出了5种安装类型，分别是Developer Default（默认安装类型）、Server only（仅作为服务器）、Client only（仅作为客户端）、Full（完全安装）、Custom（自定义安装）。这里选择“Custom（自定义安装）”类型按钮，单击“Next(下一步)”按钮。</p><img src="https://z3.ax1x.com/2021/11/21/IXF7dg.png" alt="" style="zoom:90%;"><p>步骤3：打开“Select Products” （选择产品）窗口，可以定制需要安装的产品清单。例如，选择“MySQL Server 8.0.26-X64”后，单击“→”添加按钮，即可选择安装MySQL服务器，如图所示。采用通用的方法，可以添加其他你需要安装的产品。</p><img src="https://z3.ax1x.com/2021/11/21/IXFqij.png" alt="" style="zoom:80%;"><p>此时如果直接“Next”（下一步），则产品的安装路径是默认的。如果想要自定义安装目录，则可以选中对应的产品，然后在下面会出现“Advanced Options”（高级选项）的超链接。</p><img src="https://z3.ax1x.com/2021/11/21/IXFLJs.png" alt="" style="zoom:80%;"><p>单击“Advanced Options”（高级选项）则会弹出安装目录的选择窗口，如图所示，此时你可以分别设置MySQL的服务程序安装目录和数据存储目录。如果不设置，默认分别在C盘的Program Files目录和ProgramData目录（这是一个隐藏目录）。如果自定义安装目录，请避免“中文”目录。另外，建议服务目录和数据目录分开存放。</p><img src="https://z3.ax1x.com/2021/11/21/IXFOWn.png" alt="" style="zoom:80%;"><p>步骤4：在上一步选择好要安装的产品之后，单击“Next”（下一步）进入确认窗口，如图所示。单击“Execute”（执行）按钮开始安装。</p><img src="https://z3.ax1x.com/2021/11/21/IXFXzq.png" alt="" style="zoom:90%;"><p>步骤5：安装完成后在“Status”（状态）列表下将显示“Complete”（安装完成），如图所示。</p><img src="https://z3.ax1x.com/2021/11/21/IXFxyV.png" alt="" style="zoom:90%;"><h3 id="2-4-配置MySQL8-0"><a href="#2-4-配置MySQL8-0" class="headerlink" title="2.4 配置MySQL8.0"></a>2.4 配置MySQL8.0</h3><p>MySQL安装之后，需要对服务器进行配置。具体的配置步骤如下。</p><p>步骤1：在上一个小节的最后一步，单击“Next”（下一步）按钮，就可以进入产品配置窗口。</p><img src="https://z3.ax1x.com/2021/11/21/IXFzLT.jpg" alt="" style="zoom:80%;"><p>步骤2：单击“Next”（下一步）按钮，进入MySQL服务器类型配置窗口，如图所示。端口号一般选择默认端口号3306。</p><img src="https://z3.ax1x.com/2021/11/21/IXkpeU.jpg" alt="" style="zoom:80%;"><p>其中，“Config Type”选项用于设置服务器的类型。单击该选项右侧的下三角按钮，即可查看3个选项，如图所示。</p><img src="https://z3.ax1x.com/2021/11/21/IXk9wF.jpg" alt="" style="zoom:80%;"><ul><li><p><code>Development Machine（开发机器）</code>：该选项代表典型个人用桌面工作站。此时机器上需要运行多个应用程序，那么MySQL服务器将占用最少的系统资源。</p></li><li><p><code>Server Machine（服务器）</code>：该选项代表服务器，MySQL服务器可以同其他服务器应用程序一起运行，例如Web服务器等。MySQL服务器配置成适当比例的系统资源。</p></li><li><p><code>Dedicated Machine（专用服务器）</code>：该选项代表只运行MySQL服务的服务器。MySQL服务器配置成使用所有可用系统资源。</p></li></ul><p>步骤3：单击“Next”（下一步）按钮，打开设置授权方式窗口。其中，上面的选项是MySQL8.0提供的新的授权方式，采用SHA256基础的密码加密方法；下面的选项是传统授权方法（保留5.x版本兼容性）。</p><img src="https://z3.ax1x.com/2021/11/21/IXkCo4.jpg" alt="" style="zoom:80%;"><p>步骤4：单击“Next”（下一步）按钮，打开设置服务器root超级管理员的密码窗口，如图所示，需要输入两次同样的登录密码。也可以通过“Add User”添加其他用户，添加其他用户时，需要指定用户名、允许该用户名在哪台/哪些主机上登录，还可以指定用户角色等。此处暂不添加用户，用户管理在MySQL高级特性篇中讲解。</p><img src="https://z3.ax1x.com/2021/11/21/IXkiFJ.jpg" alt="" style="zoom:80%;"><p>步骤5：单击“Next”（下一步）按钮，打开设置服务器名称窗口，如图所示。该服务名会出现在Windows服务列表中，也可以在命令行窗口中使用该服务名进行启动和停止服务。本书将服务名设置为“MySQL80”。如果希望开机自启动服务，也可以勾选“Start the MySQL Server at System Startup”选项（推荐）。</p><p>下面是选择以什么方式运行服务？可以选择“Standard System Account”(标准系统用户)或者“Custom User”(自定义用户)中的一个。这里推荐前者。</p><img src="https://z3.ax1x.com/2021/11/21/IXkFY9.jpg" alt="" style="zoom:80%;"><p>步骤6：单击“Next”（下一步）按钮，打开确认设置服务器窗口，单击“Execute”（执行）按钮。</p><img src="https://z3.ax1x.com/2021/11/21/IXkkWR.jpg" alt="" style="zoom:80%;"><p>步骤7：完成配置，如图所示。单击“Finish”（完成）按钮，即可完成服务器的配置。</p><img src="https://z3.ax1x.com/2021/11/21/IXkES1.jpg" alt="" style="zoom:80%;"><p>步骤8：如果还有其他产品需要配置，可以选择其他产品，然后继续配置。如果没有，直接选择“Next”（下一步），直接完成整个安装和配置过程。</p><img src="https://z3.ax1x.com/2021/11/21/IXkZy6.jpg" alt="" style="zoom:80%;"><p>步骤9：结束安装和配置。</p><img src="https://z3.ax1x.com/2021/11/21/IXkeOK.jpg" alt="" style="zoom:80%;"><h3 id="2-5-配置MySQL8-0-环境变量"><a href="#2-5-配置MySQL8-0-环境变量" class="headerlink" title="2.5 配置MySQL8.0 环境变量"></a>2.5 配置MySQL8.0 环境变量</h3><p>如果不配置MySQL环境变量，就不能在命令行直接输入MySQL登录命令。下面说如何配置MySQL的环境变量：</p><p>步骤1：在桌面上右击【此电脑】图标，在弹出的快捷菜单中选择【属性】菜单命令。<br>步骤2：打开【系统】窗口，单击【高级系统设置】链接。<br>步骤3：打开【系统属性】对话框，选择【高级】选项卡，然后单击【环境变量】按钮。<br>步骤4：打开【环境变量】对话框，在系统变量列表中选择path变量。<br>步骤5：单击【编辑】按钮，在【编辑环境变量】对话框中，将MySQL应用程序的bin目录（C:\Program Files\MySQL\MySQL Server 8.0\bin）添加到变量值中，用分号将其与其他路径分隔开。<br>步骤6：添加完成之后，单击【确定】按钮，这样就完成了配置path变量的操作，然后就可以直接输入MySQL命令来登录数据库了。</p><h3 id="2-6-MySQL5-7-版本的安装、配置"><a href="#2-6-MySQL5-7-版本的安装、配置" class="headerlink" title="2.6 MySQL5.7 版本的安装、配置"></a>2.6 MySQL5.7 版本的安装、配置</h3><ul><li><strong>安装</strong></li></ul><p>此版本的安装过程与上述过程除了版本号不同之外，其它环节都是相同的。所以这里省略了MySQL5.7.34版本的安装截图。</p><ul><li><strong>配置</strong></li></ul><p>配置环节与MySQL8.0版本确有细微不同。大部分情况下直接选择“Next”即可，不影响整理使用。</p><p>这里配置MySQL5.7时，重点强调：<strong>与前面安装好的MySQL8.0不能使用相同的端口号。</strong></p><h3 id="2-7-安装失败问题"><a href="#2-7-安装失败问题" class="headerlink" title="2.7 安装失败问题"></a>2.7 安装失败问题</h3><p>MySQL的安装和配置是一件非常简单的事，但是在操作过程中也可能出现问题，特别是初学者。</p><p><strong>问题1：无法打开MySQL8.0软件安装包或者安装过程中失败，如何解决？</strong></p><p>在运行MySQL8.0软件安装包之前，用户需要确保系统中已经安装了.Net Framework相关软件，如果缺少此软件，将不能正常地安装MySQL8.0软件。</p><img src="https://z3.ax1x.com/2021/11/21/IXZpcR.gif" alt="" style="zoom:80%;"><p>解决方案：到这个地址<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642%E4%B8%8B%E8%BD%BDMicrosoft">https://www.microsoft.com/en-us/download/details.aspx?id=42642下载Microsoft</a> .NET Framework 4.5并安装后，再去安装MySQL。</p><p>另外，还要确保Windows Installer正常安装。windows上安装mysql8.0需要操作系统提前已安装好Microsoft Visual C++ 2015-2019。</p><img src="https://z3.ax1x.com/2021/11/21/IXVXAU.gif" alt="" style="zoom:75%;"><img src="https://z3.ax1x.com/2021/11/21/IXZ9j1.gif" alt="" style="zoom:75%;"><p>解决方案同样是，提前到微软官网<a href="https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0%EF%BC%8C%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%BA%94%E7%9A%84%E7%8E%AF%E5%A2%83%E3%80%82">https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0，下载相应的环境。</a></p><p><strong>问题2：卸载重装MySQL失败？</strong></p><p>该问题通常是因为MySQL卸载时，没有完全清除相关信息导致的。</p><p>解决办法是，把以前的安装目录删除。如果之前安装并未单独指定过服务安装目录，则默认安装目录是“C:\Program Files\MySQL”，彻底删除该目录。同时删除MySQL的Data目录，如果之前安装并未单独指定过数据目录，则默认安装目录是“C:\ProgramData\MySQL”，该目录一般为隐藏目录。删除后，重新安装即可。</p><p><strong>问题3：如何在Windows系统删除之前的未卸载干净的MySQL服务列表？</strong></p><p>操作方法如下，在系统“搜索框”中输入“cmd”，按“Enter”（回车）键确认，弹出命令提示符界面。然后输入“sc delete MySQL服务名”,按“Enter”（回车）键，就能彻底删除残余的MySQL服务了。</p><h2 id="3-MySQL的登录"><a href="#3-MySQL的登录" class="headerlink" title="3. MySQL的登录"></a>3. MySQL的登录</h2><h3 id="3-1-服务的启动与停止"><a href="#3-1-服务的启动与停止" class="headerlink" title="3.1 服务的启动与停止"></a>3.1 服务的启动与停止</h3><p>MySQL安装完毕之后，需要启动服务器进程，不然客户端无法连接数据库。</p><p>在前面的配置过程中，已经将MySQL安装为Windows服务，并且勾选当Windows启动、停止时，MySQL也自动启动、停止。</p><h4 id="方式1：使用图形界面工具"><a href="#方式1：使用图形界面工具" class="headerlink" title="方式1：使用图形界面工具"></a>方式1：使用图形界面工具</h4><ul><li><p>步骤1：打开windows服务</p><ul><li>方式1：计算机（点击鼠标右键）→ 管理（点击）→ 服务和应用程序（点击）→ 服务（点击）</li><li>方式2：控制面板（点击）→ 系统和安全（点击）→ 管理工具（点击）→ 服务（点击）</li><li>方式3：任务栏（点击鼠标右键）→ 启动任务管理器（点击）→ 服务（点击）</li><li>方式4：单击【开始】菜单，在搜索框中输入“services.msc”，按Enter键确认 </li></ul></li><li><p>步骤2：找到MySQL80（点击鼠标右键）→ 启动或停止（点击）</p></li></ul><p><img src="https://z3.ax1x.com/2021/11/21/IXZPnx.png"></p><h4 id="方式2：使用命令行工具"><a href="#方式2：使用命令行工具" class="headerlink" title="方式2：使用命令行工具"></a>方式2：使用命令行工具</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动 MySQL 服务命令：</span><br><span class="line">net start MySQL服务名</span><br><span class="line"></span><br><span class="line"># 停止 MySQL 服务命令：</span><br><span class="line">net stop MySQL服务名</span><br></pre></td></tr></tbody></table></figure><img src="https://z3.ax1x.com/2021/11/21/IXZFHK.png" alt="" style="zoom:80%;"><p>说明：</p><ol><li><p>start和stop后面的服务名应与之前配置时指定的服务名一致。</p></li><li><p>如果当你输入命令后，提示“拒绝服务”，请以<code>系统管理员身份</code>打开命令提示符界面重新尝试。</p></li></ol><h3 id="3-2-自带客户端的登录与退出"><a href="#3-2-自带客户端的登录与退出" class="headerlink" title="3.2 自带客户端的登录与退出"></a>3.2 自带客户端的登录与退出</h3><p>当MySQL服务启动完成后，便可以通过客户端来登录MySQL数据库。注意：确认服务是开启的。</p><h4 id="登录方式1：MySQL自带客户端"><a href="#登录方式1：MySQL自带客户端" class="headerlink" title="登录方式1：MySQL自带客户端"></a>登录方式1：MySQL自带客户端</h4><p>开始菜单 → 所有程序 → MySQL → MySQL 8.0 Command Line Client</p><img src="https://z3.ax1x.com/2021/11/21/IXZV4e.png" alt="" style="zoom:80%;"><blockquote><p>说明：仅限于root用户</p></blockquote><h4 id="登录方式2：windows命令行"><a href="#登录方式2：windows命令行" class="headerlink" title="登录方式2：windows命令行"></a>登录方式2：windows命令行</h4><ul><li>格式：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 主机名 -P 端口号 -u 用户名 -p密码</span><br></pre></td></tr></tbody></table></figure><ul><li>举例：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -P 3306 -u root -pabc123  # 这里我设置的root用户的密码是abc123</span><br></pre></td></tr></tbody></table></figure><img src="https://z3.ax1x.com/2021/11/21/IXZe9H.png" alt="" style="zoom:80%;"><p>注意：</p><p>（1）-p与密码之间不能有空格，其他参数名与参数值之间可以有空格也可以没有空格。如：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>hlocalhost <span class="operator">-</span>P3306 <span class="operator">-</span>uroot <span class="operator">-</span>pabc123</span><br></pre></td></tr></tbody></table></figure><p>（2）密码建议在下一行输入，保证安全</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h localhost <span class="operator">-</span>P <span class="number">3306</span> <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">Enter password:<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></tbody></table></figure><p>（3）客户端和服务器在同一台机器上，所以输入localhost或者IP地址127.0.0.1。同时，因为是连接本机：<br>-hlocalhost就可以省略，如果端口号没有修改：-P3306也可以省略</p><p>  简写成：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">Enter password:<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></tbody></table></figure><p>连接成功后，有关于MySQL Server服务版本的信息，还有第几次连接的id标识。</p><p>也可以在命令行通过以下方式获取MySQL Server服务版本的信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:\&gt; mysql -V</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:\&gt; mysql --version</span><br></pre></td></tr></tbody></table></figure><p>或<strong>登录</strong>后，通过以下方式查看当前版本信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br></pre></td></tr></tbody></table></figure><h4 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">或</span><br><span class="line">quit</span><br></pre></td></tr></tbody></table></figure><h2 id="4-MySQL演示使用"><a href="#4-MySQL演示使用" class="headerlink" title="4. MySQL演示使用"></a>4. MySQL演示使用</h2><h3 id="4-1-MySQL的使用演示"><a href="#4-1-MySQL的使用演示" class="headerlink" title="4.1 MySQL的使用演示"></a>4.1 MySQL的使用演示</h3><p>1、查看所有的数据库</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>“information_schema”是 MySQL 系统自带的数据库，主要保存 MySQL 数据库服务器的系统信息，比如数据库的名称、数据表的名称、字段名称、存取权限、数据文件 所在的文件夹和系统使用的文件夹，等等</p><p>“performance_schema”是 MySQL 系统自带的数据库，可以用来监控 MySQL 的各类性能指标。 </p><p>“sys”数据库是 MySQL 系统自带的数据库，主要作用是以一种更容易被理解的方式展示 MySQL 数据库服务器的各类性能指标，帮助系统管理员和开发人员监控 MySQL 的技术性能。 </p><p>“mysql”数据库保存了 MySQL 数据库服务器运行时需要的系统信息，比如数据文件夹、当前使用的字符集、约束检查信息，等等</p></blockquote><p>为什么 Workbench 里面我们只能看到“demo”和“sys”这 2 个数据库呢？ </p><p>这是因为，Workbench 是图形化的管理工具，主要面向开发人 员，“demo”和“sys”这 2 个数据库已经够用了。如果有特殊需求，比如，需要监控 MySQL 数据库各项性能指标、直接操作 MySQL 数据库系统文件等，可以由 DBA 通过 SQL 语句，查看其它的系统数据库。</p><p>2、创建自己的数据库</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名;</span><br><span class="line"></span><br><span class="line">#创建atguigudb数据库，该名称不能与已经存在的数据库重名。</span><br><span class="line">create database atguigudb;</span><br></pre></td></tr></tbody></table></figure><p>3、使用自己的数据库</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br><span class="line"></span><br><span class="line">#使用atguigudb数据库</span><br><span class="line">use atguigudb;</span><br></pre></td></tr></tbody></table></figure><p>说明：如果没有使用use语句，后面针对数据库的操作也没有加“数据名”的限定，那么会报“ERROR 1046 (3D000): No database selected”（没有选择数据库）</p><p>使用完use语句之后，如果接下来的SQL都是针对一个数据库操作的，那就不用重复use了，如果要针对另一个数据库操作，那么要重新use。</p><p>4、查看某个库的所有表格</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show tables;  #要求前面有use语句</span><br><span class="line"></span><br><span class="line">show tables from 数据库名;</span><br></pre></td></tr></tbody></table></figure><p>5、创建新的表格</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名称(</span><br><span class="line">字段名  数据类型,</span><br><span class="line">字段名 数据类型</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>说明：如果是最后一个字段，后面就用加逗号，因为逗号的作用是分割每个字段。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#创建学生表</span><br><span class="line">create table student(</span><br><span class="line">id int,</span><br><span class="line">    name varchar(20)  #说名字最长不超过20个字符</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>6、查看一个表的数据</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 数据库表名称;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看学生表的数据</span><br><span class="line">select * from student;</span><br></pre></td></tr></tbody></table></figure><p>7、添加一条记录</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名称 values(值列表);</span><br><span class="line"></span><br><span class="line">#添加两条记录到student表中</span><br><span class="line">insert into student values(1,'张三');</span><br><span class="line">insert into student values(2,'李四');</span><br></pre></td></tr></tbody></table></figure><p>报错：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into student values(1,'张三');</span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: '\xD5\xC5\xC8\xFD' for column 'name' at row 1</span><br><span class="line">mysql&gt; insert into student values(2,'李四');</span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: '\xC0\xEE\xCB\xC4' for column 'name' at row 1</span><br><span class="line">mysql&gt; show create table student;</span><br></pre></td></tr></tbody></table></figure><p>字符集的问题。</p><p>8、查看表的创建信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名称\G</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看student表的详细创建信息</span><br><span class="line">show create table student\G</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#结果如下</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">  `id` int(11) DEFAULT NULL,</span><br><span class="line">  `name` varchar(20) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><p>上面的结果显示student的表格的默认字符集是“latin1”不支持中文。</p><p>9、查看数据库的创建信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show create database 数据库名\G</span><br><span class="line"></span><br><span class="line">#查看atguigudb数据库的详细创建信息</span><br><span class="line">show create database atguigudb\G</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#结果如下</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Database: atguigudb</span><br><span class="line">Create Database: CREATE DATABASE `atguigudb` /*!40100 DEFAULT CHARACTER SET latin1 */</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><p>上面的结果显示atguigudb数据库也不支持中文，字符集默认是latin1。</p><p>10、删除表格</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名称;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#删除学生表</span><br><span class="line">drop table student;</span><br></pre></td></tr></tbody></table></figure><p>11、删除数据库</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#删除atguigudb数据库</span><br><span class="line">drop database atguigudb;</span><br></pre></td></tr></tbody></table></figure><h3 id="4-2-MySQL的编码设置"><a href="#4-2-MySQL的编码设置" class="headerlink" title="4.2 MySQL的编码设置"></a>4.2 MySQL的编码设置</h3><h4 id="MySQL5-7中"><a href="#MySQL5-7中" class="headerlink" title="MySQL5.7中"></a>MySQL5.7中</h4><p><strong>问题再现：命令行操作sql乱码问题</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; INSERT INTO t_stu VALUES(1,'张三','男');</span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: '\xD5\xC5\xC8\xFD' for column 'sname' at row 1</span><br></pre></td></tr></tbody></table></figure><p><strong>问题解决</strong></p><p>步骤1：查看编码命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like 'character_%';</span><br><span class="line">show variables like 'collation_%';</span><br></pre></td></tr></tbody></table></figure><p>步骤2：修改mysql的数据目录下的my.ini配置文件</p><figure class="highlight ini"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span>  <span class="comment">#大概在63行左右，在其下添加</span></span><br><span class="line">... </span><br><span class="line"><span class="attr">default-character-set</span>=utf8  <span class="comment">#默认字符集</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span>  <span class="comment"># 大概在76行左右，在其下添加</span></span><br><span class="line">...</span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">collation-server</span>=utf8_general_ci</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：建议修改配置文件使用notepad++等高级文本编辑器，使用记事本等软件打开修改后可能会导致文件编码修改为“含BOM头”的编码，从而服务重启失败。</p></blockquote><p>步骤3：重启服务</p><p>步骤4：查看编码命令</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">'character_%'</span>;</span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">'collation_%'</span>;</span><br></pre></td></tr></tbody></table></figure><img src="https://z3.ax1x.com/2021/11/21/IXZm3d.jpg" style="zoom:90%;"><img src="https://z3.ax1x.com/2021/11/21/IXZngA.jpg" style="zoom:90%;"><ul><li>如果是以上配置就说明对了。接着我们就可以新创建数据库、新创建数据表，接着添加包含中文的数据了。</li></ul><h4 id="MySQL8-0中"><a href="#MySQL8-0中" class="headerlink" title="MySQL8.0中"></a>MySQL8.0中</h4><p>在MySQL 8.0版本之前，默认字符集为latin1，utf8字符集指向的是utf8mb3。网站开发人员在数据库设计的时候往往会将编码修改为utf8字符集。如果遗忘修改默认的编码，就会出现乱码的问题。从MySQL 8.0开始，数据库的默认编码改为<code>utf8mb4</code>，从而避免了上述的乱码问题。</p><h2 id="5-MySQL图形化管理工具"><a href="#5-MySQL图形化管理工具" class="headerlink" title="5. MySQL图形化管理工具"></a>5. MySQL图形化管理工具</h2><p>MySQL图形化管理工具极大地方便了数据库的操作与管理，常用的图形化管理工具有：MySQL Workbench、phpMyAdmin、Navicat Preminum、MySQLDumper、SQLyog、dbeaver、MySQL ODBC Connector。</p><h3 id="工具1-MySQL-Workbench"><a href="#工具1-MySQL-Workbench" class="headerlink" title="工具1. MySQL Workbench"></a>工具1. MySQL Workbench</h3><p>MySQL官方提供的图形化管理工具MySQL Workbench完全支持MySQL 5.0以上的版本。MySQL Workbench分为社区版和商业版，社区版完全免费，而商业版则是按年收费。</p><p>MySQL Workbench 为数据库管理员、程序开发者和系统规划师提供可视化设计、模型建立、以及数据库管理功能。它包含了用于创建复杂的数据建模ER模型，正向和逆向数据库工程，也可以用于执行通常需要花费大量时间的、难以变更和管理的文档任务。</p><p>下载地址：<a href="http://dev.mysql.com/downloads/workbench/%E3%80%82">http://dev.mysql.com/downloads/workbench/。</a></p><p>使用：</p><p>首先，我们点击 Windows 左下角的“开始”按钮，如果你是 Win10 系统，可以直接看到所有程序。接着，找到“MySQL”，点开，找到“MySQL Workbench 8.0 CE”。点击打开 Workbench，如下图所示：</p><p><img src="https://z3.ax1x.com/2021/11/21/IXZujI.png"></p><p>左下角有个本地连接，点击，录入 Root 的密码，登录本地 MySQL 数据库服务器，如下图所示：</p><img src="https://z3.ax1x.com/2021/11/21/IXZMut.png" alt="" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZQDP.png" alt="" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZG4g.png" alt="" style="zoom:80%;"><p>这是一个图形化的界面，我来给你介绍下这个界面。 </p><ul><li><p>上方是菜单。左上方是导航栏，这里我们可以看到 MySQL 数据库服务器里面的数据 库，包括数据表、视图、存储过程和函数；左下方是信息栏，可以显示上方选中的数据 库、数据表等对象的信息。 </p></li><li><p>中间上方是工作区，你可以在这里写 SQL 语句，点击上方菜单栏左边的第三个运行按 钮，就可以执行工作区的 SQL 语句了。 </p></li><li><p>中间下方是输出区，用来显示 SQL 语句的运行情况，包括什么时间开始运行的、运行的 内容、运行的输出，以及所花费的时长等信息。</p></li></ul><p>好了，下面我们就用 Workbench 实际创建一个数据库，并且导入一个 Excel 数据文件， 来生成一个数据表。数据表是存储数据的载体，有了数据表以后，我们就能对数据进行操作了。 </p><h3 id="工具2-Navicat"><a href="#工具2-Navicat" class="headerlink" title="工具2. Navicat"></a>工具2. Navicat</h3><p>Navicat MySQL是一个强大的MySQL数据库服务器管理和开发工具。它可以与任何3.21或以上版本的MySQL一起工作，支持触发器、存储过程、函数、事件、视图、管理用户等，对于新手来说易学易用。其精心设计的图形用户界面（GUI）可以让用户用一种安全简便的方式来快速方便地创建、组织、访问和共享信息。Navicat支持中文，有免费版本提供。<br>下载地址：<a href="http://www.navicat.com/%E3%80%82">http://www.navicat.com/。</a></p><img src="https://z3.ax1x.com/2021/11/21/IXZt3j.png" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZNgs.png" alt="" style="zoom:80%;"><h3 id="工具3-SQLyog"><a href="#工具3-SQLyog" class="headerlink" title="工具3. SQLyog"></a>工具3. SQLyog</h3><p>SQLyog 是业界著名的 Webyog 公司出品的一款简洁高效、功能强大的图形化 MySQL 数据库管理工具。这款工具是使用C++语言开发的。该工具可以方便地创建数据库、表、视图和索引等，还可以方便地进行插入、更新和删除等操作，同时可以方便地进行数据库、数据表的备份和还原。该工具不仅可以通过SQL文件进行大量文件的导入和导出，还可以导入和导出XML、HTML和CSV等多种格式的数据。<br>下载地址：<a href="http://www.webyog.com/%EF%BC%8C%E8%AF%BB%E8%80%85%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%90%9C%E7%B4%A2%E4%B8%AD%E6%96%87%E7%89%88%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E3%80%82">http://www.webyog.com/，读者也可以搜索中文版的下载地址。</a></p><img src="https://z3.ax1x.com/2021/11/21/IXZUvn.png" alt="" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZDET.png" alt="" style="zoom:80%;"><h3 id="工具4：dbeaver"><a href="#工具4：dbeaver" class="headerlink" title="工具4：dbeaver"></a>工具4：dbeaver</h3><p>DBeaver是一个通用的数据库管理工具和 SQL 客户端，支持所有流行的数据库：MySQL、PostgreSQL、SQLite、Oracle、DB2、SQL Server、 Sybase、MS Access、Teradata、 Firebird、Apache Hive、Phoenix、Presto等。DBeaver比大多数的SQL管理工具要轻量，而且支持中文界面。DBeaver社区版作为一个免费开源的产品，和其他类似的软件相比，在功能和易用性上都毫不逊色。</p><p>唯一需要注意是 DBeaver 是用Java编程语言开发的，所以需要拥有 JDK（Java Development ToolKit）环境。如果电脑上没有JDK，在选择安装DBeaver组件时，勾选“Include Java”即可。</p><p>下载地址：<a href="https://dbeaver.io/download/">https://dbeaver.io/download/</a></p><img src="https://z3.ax1x.com/2021/11/21/IXZrUU.png" alt="" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZs5F.png" alt="" style="zoom:75%;"><img src="https://z3.ax1x.com/2021/11/21/IXZc8J.png" alt="" style="zoom:80%;"><img src="https://z3.ax1x.com/2021/11/21/IXZg29.png" alt="" style="zoom:70%;"><h3 id="可能出现连接问题："><a href="#可能出现连接问题：" class="headerlink" title="可能出现连接问题："></a>可能出现连接问题：</h3><p>有些图形界面工具，特别是旧版本的图形界面工具，在连接MySQL8时出现“Authentication plugin ‘caching_sha2_password’ cannot be loaded”错误。</p><img src="https://z3.ax1x.com/2021/11/21/IXZWK1.png" alt="" style="zoom:80%;"><p>出现这个原因是MySQL8之前的版本中加密规则是mysql_native_password，而在MySQL8之后，加密规则是caching_sha2_password。解决问题方法有两种，第一种是升级图形界面工具版本，第二种是把MySQL8用户登录密码加密规则还原成mysql_native_password。</p><p>第二种解决方案如下，用命令行登录MySQL数据库之后，执行如下命令修改用户密码加密规则并更新用户密码，这里修改用户名为“root@localhost”的用户密码规则为“mysql_native_password”，密码值为“123456”，如图所示。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#使用mysql数据库</span><br><span class="line">USE mysql; </span><br><span class="line"></span><br><span class="line">#修改'root'@'localhost'用户的密码规则和密码</span><br><span class="line">ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'abc123'; </span><br><span class="line"></span><br><span class="line">#刷新权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure><img src="https://z3.ax1x.com/2021/11/21/IXZfDx.png" alt="" style="zoom:80%;"><h2 id="6-MySQL目录结构与源码"><a href="#6-MySQL目录结构与源码" class="headerlink" title="6. MySQL目录结构与源码"></a>6. MySQL目录结构与源码</h2><h3 id="6-1-主要目录结构"><a href="#6-1-主要目录结构" class="headerlink" title="6.1 主要目录结构"></a>6.1 主要目录结构</h3><table><thead><tr><th>MySQL的目录结构</th><th>说明</th></tr></thead><tbody><tr><td>bin目录</td><td>所有MySQL的可执行文件。如：mysql.exe</td></tr><tr><td>MySQLInstanceConfig.exe</td><td>数据库的配置向导，在安装时出现的内容</td></tr><tr><td>data目录</td><td>系统数据库所在的目录</td></tr><tr><td>my.ini文件</td><td>MySQL的主要配置文件</td></tr><tr><td>c:\ProgramData\MySQL\MySQL Server 8.0\data\</td><td>用户创建的数据库所在的目录</td></tr></tbody></table><h3 id="6-2-MySQL-源代码获取"><a href="#6-2-MySQL-源代码获取" class="headerlink" title="6.2 MySQL 源代码获取"></a>6.2 MySQL 源代码获取</h3><p>首先，你要进入 MySQL下载界面。 这里你不要选择用默认的“Microsoft Windows”，而是要通过下拉栏，找到“Source Code”，在下面的操作系统版本里面， 选择 Windows（Architecture Independent），然后点击下载。 </p><p>接下来，把下载下来的压缩文件解压，我们就得到了 MySQL 的源代码。</p><p>MySQL 是用 C++ 开发而成的，我简单介绍一下源代码的组成。 </p><p>mysql-8.0.22 目录下的各个子目录，包含了 MySQL 各部分组件的源代码： </p><p><img src="https://z3.ax1x.com/2021/11/21/IXZ5VK.png"></p><ul><li><p>sql 子目录是 MySQL 核心代码；</p></li><li><p>libmysql 子目录是客户端程序 API；</p></li><li><p>mysql-test 子目录是测试工具；</p></li><li><p>mysys 子目录是操作系统相关函数和辅助函数；</p></li></ul><p>源代码可以用记事本打开查看，如果你有 C++ 的开发环境，也可以在开发环境中打开查看。 </p><p><img src="https://z3.ax1x.com/2021/11/21/IXZIUO.png"></p><p>如上图所示，源代码并不神秘，就是普通的 C++ 代码，跟你熟悉的一样，而且有很多注释，可以帮助你理解。阅读源代码就像在跟 MySQL 的开发人员对话一样，十分有趣。</p><h2 id="7-常见问题的解决-课外内容"><a href="#7-常见问题的解决-课外内容" class="headerlink" title="7. 常见问题的解决(课外内容)"></a>7. 常见问题的解决(课外内容)</h2><h3 id="问题1：root用户密码忘记，重置的操作"><a href="#问题1：root用户密码忘记，重置的操作" class="headerlink" title="问题1：root用户密码忘记，重置的操作"></a>问题1：root用户密码忘记，重置的操作</h3><p>1: 通过任务管理器或者服务管理，关掉mysqld(服务进程)<br>2: 通过命令行+特殊参数开启mysqld<br>mysqld –defaults-file=”D:\ProgramFiles\mysql\MySQLServer5.7Data\my.ini” –skip-grant-tables</p><p>3: 此时，mysqld服务进程已经打开。并且不需要权限检查<br>4: mysql -uroot 无密码登陆服务器。另启动一个客户端进行<br>5: 修改权限表<br>（1） use mysql;<br>（2）update user set authentication_string=password(‘新密码’) where user=’root’ and Host=’localhost’;<br>（3）flush privileges;<br>6: 通过任务管理器，关掉mysqld服务进程。<br>7: 再次通过服务管理，打开mysql服务。<br>8: 即可用修改后的新密码登陆。</p><h3 id="问题2：mysql命令报“不是内部或外部命令”"><a href="#问题2：mysql命令报“不是内部或外部命令”" class="headerlink" title="问题2：mysql命令报“不是内部或外部命令”"></a>问题2：mysql命令报“不是内部或外部命令”</h3><p>如果输入mysql命令报“不是内部或外部命令”，把mysql安装目录的bin目录配置到环境变量path中。如下：</p><p><img src="https://z3.ax1x.com/2021/11/21/IXZo5D.png"></p><h3 id="问题3：错误ERROR-：没有选择数据库就操作表格和数据"><a href="#问题3：错误ERROR-：没有选择数据库就操作表格和数据" class="headerlink" title="问题3：错误ERROR ：没有选择数据库就操作表格和数据"></a>问题3：错误ERROR ：没有选择数据库就操作表格和数据</h3><table><thead><tr><th>ERROR 1046 (3D000): No database selected</th></tr></thead><tbody><tr><td>解决方案一：就是使用“USE 数据库名;”语句，这样接下来的语句就默认针对这个数据库进行操作</td></tr><tr><td>解决方案二：就是所有的表对象前面都加上“数据库.”</td></tr></tbody></table><h3 id="问题4：命令行客户端的字符集问题"><a href="#问题4：命令行客户端的字符集问题" class="headerlink" title="问题4：命令行客户端的字符集问题"></a>问题4：命令行客户端的字符集问题</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; INSERT INTO t_stu VALUES(1,'张三','男');</span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: '\xD5\xC5\xC8\xFD' for column 'sname' at row 1</span><br></pre></td></tr></tbody></table></figure><p>原因：服务器端认为你的客户端的字符集是utf-8，而实际上你的客户端的字符集是GBK。</p><p><img src="https://z3.ax1x.com/2021/11/21/IXZb2d.png"></p><p>查看所有字符集：<strong>SHOW VARIABLES LIKE ‘character_set_%’;</strong></p><p><img src="https://z3.ax1x.com/2021/11/21/IXZza8.png"></p><p>解决方案，设置当前连接的客户端字符集 <strong>“SET NAMES GBK;”</strong></p><p><img src="https://z3.ax1x.com/2021/11/21/IXeCGQ.png"></p><h3 id="问题5：修改数据库和表的字符编码"><a href="#问题5：修改数据库和表的字符编码" class="headerlink" title="问题5：修改数据库和表的字符编码"></a>问题5：修改数据库和表的字符编码</h3><p>修改编码：</p><p>（1)先停止服务，（2）修改my.ini文件（3）重新启动服务</p><p>说明：</p><p>如果是在修改my.ini之前建的库和表，那么库和表的编码还是原来的Latin1，要么删了重建，要么使用alter语句修改编码。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database 0728db charset Latin1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use 0728db;</span><br><span class="line">Database changed</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table student (id int , name varchar(20)) charset Latin1;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create table student\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `name` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table student charset utf8; #修改表字符编码为UTF8</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create table student\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `name` varchar(20) CHARACTER SET latin1 DEFAULT NULL,  #字段仍然是latin1编码</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; alter table student modify name varchar(20) charset utf8; #修改字段字符编码为UTF8</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create table student\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `name` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create database 0728db;;</span><br><span class="line">+--------+-----------------------------------------------------------------+</span><br><span class="line">|Database| Create Database                                                 |</span><br><span class="line">+------+-------------------------------------------------------------------+</span><br><span class="line">|0728db| CREATE DATABASE `0728db` /*!40100 DEFAULT CHARACTER SET latin1 */ |</span><br><span class="line">+------+-------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; alter database 0728db charset utf8; #修改数据库的字符编码为utf8</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show create database 0728db;</span><br><span class="line">+--------+-----------------------------------------------------------------+</span><br><span class="line">|Database| Create Database                                                 |</span><br><span class="line">+--------+-----------------------------------------------------------------+</span><br><span class="line">| 0728db | CREATE DATABASE `0728db` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br><span class="line">+--------+-----------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
